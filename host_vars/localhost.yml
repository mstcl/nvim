# :vim: set ft=yaml.ansible:
---
current_user: "{{ lookup('env', 'USER') }}"
stable_release: true # use neovim stable

# ~~ (0) FEATURE CONFIGURATION ~~

dap_enabled: false # enable dap core, which is nvim dap, dap ui and python dap
lsp_enabled: false # enable lsp core, which is mason, lspconfig, none-ls

lsp_features:
  virtual_text: false # virtual text diagnostic
  breadcrumbs: false # show a bar at the top (winbar) with the current scope's symbols.
  usage: false # show number of usage for functions etc.
  inlay_hints: true # inlay hints for nvim < 0.10

func_features:
  tip: false # show a tip on startup (pretty annoying but useful if you're new)

ui_features:
  modes: false # highlight cursorline depending on the mode
  scope: true # only display buffers for under a given tab scope
  cursorword: false # highlight words that match current word under cursor
  indent_lines: false # show fancy indent lines
  tabline: false # display a bar at the top showing opened buffers

edit_features:
  biscuits: false # show the current scope level at the end of the scope.
  completion: true # text completion
  escape: true # use jk for escape
  move: true # extra line and char movements
  flash: true # quickly jump anywhere
  spider: true # smarter word movements
  rooter: true # project rooter

syntax_features:
  typst: false # enable typst syntax
  ansible: false # enable ansible syntax
  quarto: false # enable quarto integrations
  markdown: false # enable markdown integrations
  org: false # enable orgmode syntax
  tex: false # enable tex integrations
  rainbow: true # enable rainbow parens
  hlargs: true # enable different highlight for function args

# ~~ (1) WORKSPACES ~~

# Declare workspaces for quick access to scoped searches using a frecency algo. Environment variables like $HOME are expanded.
# Expects a list with items like:
# frecency_workspaces:
#   - home: "/home/user"
frecency_workspaces: []

# ~~ (2) TREESITTER ~~

# Treesitter sources to ensure installed.
# See: (https://github.com/nvim-treesitter/nvim-treesitter?tab=readme-ov-file#supported-languages)
# Expects a list
treesitter_sources: []

# ~~ (3) VANITY ~~

dap_signs: # set the symbols for DAP (appear on signcolumn)
  - Breakpoint: "⚑"
  - BreakpointCondition: "⚑"
  - LogPoint: "★"
  - Stopped: "☛"
  - BreakpointRejected: "☒"

lsp_signs: # set the symbols for LSP (appear on statusline)
  - Error: "*"
  - Warn: "!"
  - Hint: "?"
  - Info: "i"

lsp_kind_icons: # set the symbols for LSP kinds (appear in various places)
  - Array: "※"
  - Boolean: "B"
  - Calendar: "C"
  - Class: "@"
  - Collapsed: "▶"
  - Color: "%"
  - Constructor: "#"
  - Constant: "π"
  - Copilot: "*"
  - Enum: "ζ"
  - EnumMember: "@"
  - Event: "!"
  - Field: "—"
  - File: "•"
  - Folder: "+"
  - Function: "f"
  - Interface: "†"
  - Key: "*"
  - Keyword: "*"
  - Method: "f"
  - Module: "M"
  - Namespace: "ξ"
  - 'Null': "Ø"
  - Number: "#"
  - Object: "ß"
  - Operator: "⁑"
  - Package: "P"
  - Property: "✓"
  - Reference: "→"
  - Snippet: "*"
  - String: "T"
  - Struct: "@"
  - Table: "※"
  - Tag: "#"
  - TypeParameter: ":"
  - Variable: "Ψ"
  - Text: "T"
  - Unit: "$"
  - Value: "λ"
  - Watch: "W"

# ~~ (4) LSP SOURCES ~~

# These will be automatically installed by mason
# See: (https://github.com/mason-org/mason-registry/tree/main/packages)
# Expects a list
lsp_sources: []

# ~~ (5) NONE-LS SOURCES ~~

# These will be automatically installed by mason
# See: (https://github.com/mason-org/mason-registry/tree/main/packages)
# And: (https://github.com/nvimtools/none-ls.nvim/blob/main/doc/BUILTINS.md)
# Each expects a list

# !~~ (5a) FORMATTING SOURCES ~~!

null_formatting_sources: []

# !~~ (5b) HOVER SOURCES ~~!

null_hover_sources: []

# !~~ (5c) HOVER SOURCES ~~!

null_diagnostics_sources: []

# !~~ (5d) CODE ACTIONS SOURCES ~~!

null_code_actions_sources: []

# ~~ (6) OTHERS ~~

# Configure fd to allow a cleaner Telescope find_files output
# Expects a list
fd_ignore_patterns: []

# Configure the dashboard ascii
# Put the ascii in single quotes, all on one line (linebreak \n)
# Here is a cat
starter_ascii: '  ／l、\n（ﾟ、｡７\n  l  ~ヽ\n  じしf,)ノ\n\n'

# Configure orgmode agenda files (can use globbing)
# Expects a list
org_agenda_files: []

# Plugins to load locally from ~/projects
dev_plugins: []
