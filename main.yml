# :vim: set ft=yaml.ansible:
---
- name: Install and configure nvim
  hosts: localhost
  connection: local
  gather_facts: true

  tasks:
    - name: Download packages
      tags: packages
      become: true
      ansible.builtin.package:
        name:
          - "{{ 'neovim' if stable_release else 'neovim-nightly' }}"
          - curl
          - python
          - python-pip
          - fd
          - ripgrep
        state: present

    - name: Install python dependencies for neovim
      tags: packages
      ansible.builtin.pip:
        requirements: "{{ playbook_dir }}/requirements.txt"
        state: present
        virtualenv: "{{ playbook_dir }}/.venv"

    - name: Install python dependencies for neovim
      tags: plugins
      when: syntax_features.quarto
      ansible.builtin.pip:
        requirements: "{{ playbook_dir }}/requirements_python_stack.txt"
        state: present
        virtualenv: "{{ playbook_dir }}/.venv"

    - name: Template configuration
      ansible.builtin.template:
        src: "{{ playbook_dir }}/templates/user_configs.lua.j2"
        dest: "{{ playbook_dir }}/lua/user_configs.lua"
        mode: "0644"

    - name: Template additional addons
      ansible.builtin.template:
        src: "{{ playbook_dir }}/templates/user_addons.lua.j2"
        dest: "{{ playbook_dir }}/lua/plugins/user_addons.lua"
        mode: "0644"
        force: false

    - name: Make symbolic to ~/.config
      ansible.builtin.file:
        src: "{{ playbook_dir }}"
        dest: "/home/{{ current_user }}/.config/nvim"
        state: link

    - name: Print message
      tags: plugins
      ansible.builtin.debug:
        msg: "Launching neovim, exit when everything has been installed."

    - name: Print message
      tags: plugins
      when: "'pylint' in null_diagnostics_sources"
      ansible.builtin.debug:
        msg: "Manually run `:MasonInstall pylint`."

    - name: Print message
      tags: plugins
      when: "'mdformat' in null_formatting_sources"
      ansible.builtin.debug:
        msg: "Manually run `:MasonInstall mdformat`."

    - name: Launch neovim remote
      tags: plugins
      ansible.builtin.command: "{{ terminal }} --command nvim"
      changed_when: false

    - name: Grab mdformat tools
      when: "'mdformat' in null_formatting_sources"
      tags: plugins
      ansible.builtin.pip:
        name:
          - mdformat_footnote
          - mdformat_frontmatter
          - mdformat-gfm
          - mdformat_myst
          - mdformat_tables
          - mdformat-toc
        state: present
        virtualenv: "/home/{{ current_user }}/.local/share/nvim/mason/packages/mdformat/venv"

    - name: Grab pylint-venv
      when: "'pylint' in null_diagnostics_sources"
      tags: plugins
      ansible.builtin.pip:
        name:
          - pylint-venv
        state: present
        virtualenv: "/home/{{ current_user }}/.local/share/nvim/mason/packages/pylint/venv"
