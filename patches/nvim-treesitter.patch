diff --git a/lua/nvim-treesitter/highlight.lua b/lua/nvim-treesitter/highlight.lua
index 5a3cc2e8..2849ed26 100644
--- a/lua/nvim-treesitter/highlight.lua
+++ b/lua/nvim-treesitter/highlight.lua
@@ -13,16 +13,84 @@ local function should_enable_vim_regex(config, lang)
   return additional_hl and (not is_table or vim.tbl_contains(additional_hl, lang))
 end
 
+function begin_ts_highlight(bufnr, lang, owner)
+	if not vim.api.nvim_buf_is_valid(bufnr) then
+		return
+	end
+	vim.treesitter.start(bufnr, lang)
+end
+
+local vim_enter = true
+
 ---@param bufnr integer
 ---@param lang string
 function M.attach(bufnr, lang)
-  local config = configs.get_module "highlight"
-  vim.treesitter.start(bufnr, lang)
-  if config and should_enable_vim_regex(config, lang) then
-    vim.bo[bufnr].syntax = "ON"
-  end
+	if vim_enter then
+		vim.treesitter.start(bufnr, lang)
+		vim_enter = false
+		return
+	end
+	local timer = vim.loop.new_timer()
+	vim.defer_fn(function()
+		local is_active = timer:is_active()
+		if is_active then
+			vim.notify("Timer haven't been closed!", vim.log.levels.ERROR)
+		end
+	end, 2000)
+	local has_start = false
+	local timout = function(opts)
+		local force = opts.force
+		local time = opts.time
+		if not vim.api.nvim_buf_is_valid(bufnr) then
+			if timer:is_active() then
+				timer:close()
+			end
+			return
+		end
+		if (not force) and has_start then
+			return
+		end
+		if timer:is_active() then
+			timer:close() -- haven't start
+			has_start = true
+			begin_ts_highlight(bufnr, lang, "highligter")
+		end
+	end
+	vim.defer_fn(function()
+		timout({ force = false, time = 100 })
+	end, 100)
+	vim.defer_fn(function()
+		timout({ force = true, time = 1000 })
+	end, 1000)
+	local col = vim.fn.screencol()
+	local row = vim.fn.screenrow()
+	timer:start(5, 2, function()
+		vim.schedule(function()
+			if not vim.api.nvim_buf_is_valid(bufnr) then
+				if timer:is_active() then
+					timer:close()
+				end
+				return
+			end
+			if has_start then
+				return
+			end
+
+			local new_col = vim.fn.screencol()
+			local new_row = vim.fn.screenrow()
+
+			if new_row ~= row and new_col ~= col then
+				if timer:is_active() then
+					timer:close()
+					has_start = true
+					begin_ts_highlight(bufnr, lang, "highligter")
+				end
+			end
+		end)
+	end)
 end
 
+
 ---@param bufnr integer
 function M.detach(bufnr)
   vim.treesitter.stop(bufnr)
